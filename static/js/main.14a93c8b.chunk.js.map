{"version":3,"sources":["components/CreateBtn/CreateBtn.js","redux/actions.js","redux/actionTypes.js","components/CreateForm/CreateForm.js","components/Question/Question.js","redux/selectors.js","components/List/List.js","components/App/App.js","redux/reducers/questions.js","redux/reducers/create.js","redux/reducers/rootReducer.js","redux/store.js","index.js"],"names":["connect","openCreate","type","_ref","react_default","a","createElement","className","onClick","CreateForm","state","name","question","handleChange","event","_event$target","target","value","_this","setState","Object","defineProperty","addQuestion","preventDefault","props","htmlFor","id","autoFocus","this","onChange","placeholder","disabled","cancelCreate","Component","payload","removeQuestion","upVote","downVote","votes","getSortedQuestions","createSelector","questions","sort","b","questionList","map","components_Question_Question","key","_ref2","create","components_CreateForm_CreateForm","components_CreateBtn_CreateBtn","components_List_List","today","Date","yesterday","setDate","getDate","initialState","arguments","length","undefined","action","_action$payload","concat","filter","q","objectSpread","Math","max","rootReducer","combineReducers","createStore","ReactDOM","render","es","store","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.14a93c8b.chunk.js","sourcesContent":["import React          from 'react';\nimport PropTypes      from 'prop-types';\nimport { connect }    from 'react-redux';\nimport { openCreate } from '../../redux/actions';\nimport './CreateBtn.css';\n\nconst CreateBtn = ({ openCreate }) => (\n  <button type=\"button\"\n          className=\"btn btn-primary create-question-btn\"\n          onClick={openCreate}>\n    Ask a new question\n  </button>\n);\n\nCreateBtn.propTypes = {\n  openCreate: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { openCreate }\n)(CreateBtn);","import {\n  OPEN_CREATE,\n  CANCEL_CREATE,\n  ADD_QUESTION,\n  REMOVE_QUESTION,\n  UPVOTE,\n  DOWNVOTE\n} from './actionTypes';\n\nexport const openCreate = () => ({\n  type: OPEN_CREATE\n});\n\nexport const cancelCreate = () => ({\n  type: CANCEL_CREATE\n});\n\nexport const addQuestion = (name, question) => ({\n  type: ADD_QUESTION,\n  payload: {\n    name,\n    question\n  }\n});\n\nexport const removeQuestion = id => ({\n  type: REMOVE_QUESTION,\n  payload: {\n    id\n  }\n});\n\nexport const upVote = id => ({\n  type: UPVOTE,\n  payload: {\n    id\n  }\n});\n\nexport const downVote = id => ({\n  type: DOWNVOTE,\n  payload: {\n    id\n  }\n});\n","export const CANCEL_CREATE = 'CANCEL_CREATE';\nexport const OPEN_CREATE = 'OPEN_CREATE';\nexport const ADD_QUESTION = 'ADD_QUESTION';\nexport const REMOVE_QUESTION = 'REMOVE_QUESTION';\nexport const UPVOTE = 'UPVOTE';\nexport const DOWNVOTE = 'DOWNVOTE';","import React, { Component } from 'react';\nimport PropTypes            from 'prop-types';\nimport { connect }          from 'react-redux';\nimport {\n  cancelCreate,\n  addQuestion }             from '../../redux/actions';\nimport './CreateForm.css';\n\nclass CreateForm extends Component {\n  state = {\n    name: '',\n    question: ''\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  // TODO: add form validation\n  addQuestion = (event) => {\n    event.preventDefault();\n    this.props.addQuestion(this.state.name, this.state.question);\n  };\n\n  render() {\n    return (\n      <div className=\"add-question-form\">\n        <div className=\"card create-card\">\n          <div className=\"card-body\">\n            <div className=\"card-title\">Ask a new question</div>\n            <form>\n              <div className=\"form-group\">\n                <label htmlFor=\"name\">Your name</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"name\"\n                  name=\"name\"\n                  autoFocus={true}\n                  value={this.state.name}\n                  onChange={this.handleChange}\n                  placeholder=\"Enter your name or a nickname\" />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"question\">Your question</label>\n                <textarea\n                  className=\"form-control\"\n                  id=\"question\"\n                  name=\"question\"\n                  value={this.state.question}\n                  onChange={this.handleChange}\n                  placeholder=\"Ask your question\" />\n              </div>\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary btn-submit\"\n                disabled={false}\n                onClick={this.addQuestion}>Submit</button>\n              <button type=\"button\"\n                      className=\"btn btn-default btn-cancel\"\n                      onClick={this.props.cancelCreate}>Cancel</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nCreateForm.propTypes = {\n  cancelCreate: PropTypes.func.isRequired,\n  addQuestion: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  {\n    cancelCreate,\n    addQuestion\n  }\n)(CreateForm);","import React        from 'react';\nimport PropTypes    from 'prop-types';\nimport { connect }  from 'react-redux';\nimport {\n  removeQuestion,\n  upVote,\n  downVote }        from '../../redux/actions';\nimport './Question.css';\n\nconst Question = ({ question, upVote, downVote, removeQuestion }) => {\n    return (\n      <div className=\"card question-card\">\n        <div className=\"card-body\">\n          <div className=\"card-text\">{question.question}</div>\n        </div>\n        <div className=\"card-footer\">\n          <div className=\"user\">{question.name}</div>\n          <div className=\"card-actions\">\n            <div className=\"btn-up\" onClick={() => upVote(question.id)}>\n              <i className=\"fas fa-caret-up\"></i>\n            </div>\n            <div className=\"votes\">{question.votes}</div>\n            <div className=\"btn-down\" onClick={() => downVote(question.id)}>\n              <i className=\"fas fa-caret-down\"></i>\n            </div>\n            <div className=\"btn-delete\" onClick={() => removeQuestion(question.id)}>\n              <i className=\"fas fa-trash-alt\"></i>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n};\n\nQuestion.propTypes = {\n  question: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    question: PropTypes.string.isRequired,\n    id: PropTypes.instanceOf(Date),\n    votes: PropTypes.number.isRequired\n  }),\n  upVote: PropTypes.func.isRequired,\n  downVote: PropTypes.func.isRequired,\n  removeQuestion: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  null,\n  {\n    removeQuestion,\n    upVote,\n    downVote\n  }\n)(Question);\n","import { createSelector } from 'reselect';\n\nconst getQuestions = state => state.questions;\n\nexport const getSortedQuestions = createSelector(\n  getQuestions,\n  questions => questions.sort((a, b) => {\n    if (a.votes > b.votes) return -1;\n    if (a.votes === b.votes) {\n      return a.id - b.id;\n    }\n    return 1;\n  })\n);","import React                  from 'react';\nimport PropTypes              from 'prop-types';\nimport { connect }            from 'react-redux';\nimport Question               from '../Question/Question';\nimport { getSortedQuestions } from '../../redux/selectors';\nimport './List.css';\n\nconst List = ({ questions }) => {\n  const questionList = questions.map((question) => {\n    return (\n      <Question question={question}\n                key={question.id} />\n    );\n  });\n\n  return (\n    <div className=\"question-list\">{questionList}</div>\n  );\n};\n\nList.propTypes = {\n  questions: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  return  ({ questions: getSortedQuestions(state) })\n};\n\nexport default connect(mapStateToProps)(List);","import React          from 'react';\nimport PropTypes      from 'prop-types';\nimport { connect }    from 'react-redux';\nimport CreateBtn      from '../CreateBtn/CreateBtn';\nimport CreateForm     from '../CreateForm/CreateForm';\nimport List           from '../List/List';\nimport './App.css';\n\nconst App = ({ create }) => (\n  <div className=\"app\">\n    {create ?\n      <CreateForm /> :\n      <CreateBtn />}\n    <List />\n  </div>\n);\n\nApp.propTypes = {\n  create: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = ({ create }) => {\n  return  ({ create })\n};\n\nexport default connect(mapStateToProps)(App);\n","import {\n  ADD_QUESTION,\n  REMOVE_QUESTION,\n  UPVOTE,\n  DOWNVOTE } from '../actionTypes';\n\nconst today = new Date();\nconst yesterday = new Date();\nyesterday.setDate(today.getDate() + 1);\nconst initialState = [\n  {\n    name: 'Alita',\n    question: 'Can I fly?',\n    id: today,\n    votes: 5\n  }, {\n    name: 'Lskdfi',\n    question: 'How can I pronounce my name?',\n    id: yesterday,\n    votes: 10\n  }\n];\n\nconst questions = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_QUESTION: {\n      const { name, question } = action.payload;\n      return state.concat({\n        name,\n        question,\n        id: new Date(),\n        votes: 0\n      });\n    }\n    case REMOVE_QUESTION: {\n      const { id } = action.payload;\n      return state.filter(q => q.id !== id);\n    }\n    case UPVOTE: {\n      return state.map(q => {\n        if (q.id === action.payload.id) {\n          return {\n            ...q,\n            votes: q.votes + 1\n          };\n        }\n        return q;\n      });\n    }\n    case DOWNVOTE: {\n      const { id } = action.payload;\n      return state.map(q => {\n        if (q.id === id) {\n          return {\n            ...q,\n            votes: Math.max(0, q.votes - 1)\n          };\n        }\n        return q;\n      });\n    }\n    default:\n      return state;\n  }\n};\n\nexport default questions;","import { OPEN_CREATE, CANCEL_CREATE, ADD_QUESTION } from '../actionTypes';\n\nconst initialState = false;\n\nconst create = (state = initialState, action) => {\n  switch (action.type) {\n    case OPEN_CREATE: {\n      return true;\n    }\n    case CANCEL_CREATE: {\n      return false;\n    }\n    case ADD_QUESTION: {\n      return false;\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default create;\n","import { combineReducers } from 'redux';\nimport questions from './questions';\nimport create from './create';\n\nconst rootReducer = combineReducers({\n  create,\n  questions\n});\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport rootReducer from './reducers/rootReducer';\n\nexport default createStore(rootReducer);\n","import React        from 'react';\nimport ReactDOM     from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App          from './components/App/App';\nimport store        from './redux/store';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}